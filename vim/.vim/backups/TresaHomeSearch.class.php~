<?php
/**
 * @package    T-resa-lib
 * @subpackage  form
 * @author     Camille Neron <camille_neron@carpe-hora.com>
 * @copyright  (c) Carpe Hora SARL 2011
 */

/**
 * Solr form.
 *
 * @package    T-resa-lib
 * @subpackage form
 * @author     Camille Neron <camille_neron@carpe-hora.com>
 * @version    SVN: $Id: sfPropelFormTemplate.php 10377 2008-07-21 07:10:32Z dwhittle $
 */
class TresaHomeSearch extends BaseForm
{
  public function configure()
  {
    $categories = CategoryQuery::create()->find()->toKeyValue('Name', 'Name');
    unset($this[self::$CSRFFieldName]);

    $this->setWidgets(array(
      'text'      => new sfWidgetFormInputText(),
      'geo'       => new sfWidgetFormInputText(),
      'category'  => new sfWidgetFormSelect(array(
                    'choices'   => $categories,
                    'multiple'  => true)),
      ));

    $this->setValidators(array(
      'text'      => new sfValidatorString(array('required' => 'true'), array('required' => 'Vous devez entrer une recherche')),
      'geo'       => new chCmsValidatorLocalsolr(array('required' => false, 'radius' => 5, 'sfield' => 'position')),
      'category'  => new sfValidatorChoice(array('required' => false, 'choices' => $categories, 'multiple' => true))
      ));

    $this->widgetSchema->setLabels(array(
      'text'      => 'Qui / quoi ?',
      'geo'       => 'Où ?',
      'category'  => 'Filtrer par catégorie',
      ));

    $this->widgetSchema->setNameFormat('search[%s]');
  }

  /**
   * return the current query parameters
   *
   * @return array
   * @author Julien Muetton <julien_muetton@carpe-hora.com>
   **/
  public function getQuery()
  {
    if ($this->isBound() && $this->isValid())
    {
      $values = $this->getValues();
      $results = array( 'text' => $values['text']);

      if (isset($values['category']))
      {
        $results['category'] = $values['category'];
      }

      if (isset($values['geo']) && $values['geo'])
      {
        $results['geo'] = $values['geo'];
      }

      return $results;
    }

    throw new sfException('this form is not bound');
  }
}
