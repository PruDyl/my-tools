<?php
/**
 * This file declare the chCmsAdminCompanyPluginRouting class.
 *
 * @package package
 * @subpackage subpackage
 * @author Ludovic PellÃ© <ludovic_pelle@carpe-hora.com>
 * @copyright (c) Carpe Hora SARL 2011
 * @since 2011-05-27
 */

/**
 * Class with no description
 */
class chCmsAdminCompanyPluginRouting
{

  /**
   * listen to the admin panel init event
   *
   * @return void
   **/
  public static function listenToAdminMenuInitEvent(sfEvent $event)
  {
    foreach (sfConfig::get('sf_enabled_modules') as $module)
    {
      if (    0 === strpos($module, 'adminCompany') 
          &&  is_callable(array(
                        'chCmsAdminCompanyPluginRouting', 
                        ($prependRouteMethod = sprintf('prepend%sRoutes', ucfirst($module))))))
      {
        call_user_func(array('chCmsAdminCompanyPluginRouting', $prependRouteMethod), /* menu */ $event->getSubject(), $event['user']);
      }
    }
  }

  /**
   * get the default menu group unless on is given.
   *
   * @param AdminMenu         $menu   the admin menu
   * @param [AdminMenuGroup|String] $group the given admin group or it's name
   * @return AdminMenuGroup
   **/
  public static function getCompanyGroup($menu, $user, $group=null)
  {
    if(!is_null($group))
    {
      return AdminMenu::getInstance()->getGroup($group);
    }
    $company = $user->getSelectedCompany();
    $contractor = $company->getVocabulary('contractor');
    $contractors = $company->getVocabulary('contractor', 2);

    return $menu
              ->addGroup('company', 'Entreprise', '/entreprise', 'icon=silk-building');
  }

  /**
   * register adminCompanyVocabulary module admin routes
   *
   * @param AdminMenu               $menu   the admin menu
   * @param [AdminGroupMenu|string] $group  the group
   * @return void
   **/
  public static function prependAdminCompanyVocabularyRoutes($menu, $user, $group = null)
  {
    $group = self::getCompanyGroup($menu, $user, $group);

    $group
        ->addPanel('vocabulary', 'adminCompanyVocabulary', 'index', 'admin_edit_vocabulary', /* extra options*/ array(), /* uri */ 'vocabulaire')
        ->addAction('vocabulary_update', 'adminCompanyVocabulary', 'update', 'admin_edit_vocabulary', /* extra options*/ array(), /* url */ 'vocabulaire')
        ->addMenuEntry('vocabulary', 'Vocabulaire');
  }

  /**
   * register adminCompanyContactsPreferences module admin routes
   *
   * @param AdminMenu               $menu   the admin menu
   * @param [AdminGroupMenu|string] $group  the group
   * @return void
   **/
  public static function prependAdminCompanyContactsPreferencesRoutes($menu, $user, $group = null)
  {
    $group = self::getCompanyGroup($menu, $user, $group);

    $group
  }
  // your class code here
} // END OF chCmsAdminCompanyPluginRouting
