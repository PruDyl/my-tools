<?php

$app = 'users';

include(dirname(__FILE__).'/../../../../test/bootstrap/functional.php');

$browser = TresaTestFunctional::initialize(true);

// données de test
$auth = TresaTestFunctional::getFirstProvider('demo');


// begin: tests
$browser
  ->info('1.0 Testing with a fake account')
  // fail first signin to check login is not the referer
  ->signinFail('demo', 'false')
  //check routing is OK
  ->with('request')->begin()
    ->isMethod('post')
    ->isParameter('module', 'chCmsFrontendAccount')
    ->isParameter('action', 'doSignin')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(401)
    ->isValid()
    // insert your tests here
  ->end()
  // end of get url

  ->info('1.1 Testing with an normal account')
  ->signin('demo', 'demo')
  ->with('user')->begin()
    ->isAuthenticated(true)
  ->end()
    //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendAccount')
    ->isParameter('action', 'index')
  ->end()
// check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValid()
    // insert your tests here
  ->end()
  // end of get url

  ->signout()

  ->get('/compte/myProfile')
  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendAccount')
    ->isParameter('action', 'myProfile')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(401)
    ->isValid()
    // insert your tests here
  ->end()
  // end of get /copte/
;

/* TODO @see chCmsGuardExtraActionsTest.php
  ->info("1.2 Check the providers and delete")

    ->get('compte/myProfile')

    //check routing is OK
    ->with('request')->begin()
      ->isMethod('get')
      ->isParameter('module', 'chCmsFrontendAccount')
      ->isParameter('action', 'myProfile')
    ->end()

    ->info("  1.2.1 Three provider are listed")
    ->with('response')->begin()
      ->isStatusCode(200)
      ->isValid()
//      ->debug()
      ->checkElement('#providers tr.', 3)
      ->checkElement('#providers tr.row1 td:eq(1)', sprintf('/%s/', $auth->getAccountIdentifier()))
    ->end()
    // end of block  1.1

    ->info("  1.2.2 We can revoke the provider")
    ->with('response')->begin()
      ->checkElement('#providers tr.row1 td:eq(2) a', '/Annuler/')
    ->end() // end on response block

    ->info("  1.2.3 The revoke link leads us to the right place")
    ->click('Annuler')
    ->with('request')->begin()
      ->isMethod('get')
      ->isParameter('module', 'Associate')
      ->isParameter('action', 'delete')
      ->isParameter('id', $auth->getId())
    ->end() // end on request block

    ->info("  1.2.4 Once the revoke process id complete, we are redirected")
    ->with('request')->isRedirected()
    ->followRedirect()

    ->with('request')->begin()
      ->isMethod('get')
      ->isParameter('module', 'chCmsFrontendAccount')
      ->isParameter('action', 'myProfile')
    ->end() // end on request block

    ->info("  1.2.5 There are now no provider available")
    ->with('response')->begin()
      ->checkElement('#providers tr.row1', 0)
      ->checkElement('#providers', '/Aucun compte externe/')
    ->end() // end on response block
    // end of block  1.2 We can revoke the provider
    // end of get compte/myPassword
  // end of block 1. Display the providers
;

TresaTestFunctional::loadData();
$auth = TresaTestFunctional::getFirstProvider('demo');

$browser
  ->restart()

  ->info('3. Testing with an account using only a provider')

  ->signin('demo', 'demo')
  ->with('user')->begin()
    ->isAuthenticated(true)
  ->end();

// set a dummy password to demo
$user = TresaTestFunctional::getUserByUserName('demo');
$user->setPasswordHash('null');
$user->save();

$browser
  ->info(" 3.1 Display the providers")

    ->get('compte/myPassword')

    //check routing is OK
    ->with('request')->begin()
      ->isMethod('get')
      ->isParameter('module', 'chCmsFrontendAccount')
      ->isParameter('action', 'myPassword')
    ->end()

    ->info(" 3.1.1 One providers is listed")
    ->with('response')->begin()
      ->isStatusCode(200)
      //->isValid()
      ->checkElement('#providers_list li', 1)
      ->checkElement('#providers_list li:first', sprintf('/%s/', $auth->getAccountIdentifier()))
    ->end()
    // end of block  1.1

    ->info(" 3.2 We can't revoke the provider")
    ->with('response')->begin()
      ->checkElement('#providers_list li:first a', '!/Révoquer/')
    ->end() // end on response block

    ->info("  3.2.1 The revoke page leads to an error 404")
    ->get(sprintf('/compte/associate/delete/%s', $auth->getid()))
    ->isStatusCode(404)
    // end of get /compte/associate/delete/%s
    // end of block   3.2.1 The revoke page leads to an error 404
;*/


// vim: ft=symfony.php.sftest
