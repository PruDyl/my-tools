<?php

/**
 * This file declare the YahooOpenIdConsumerTester class.
 *
 * @package chCmsGuardExtraPlugin
 * @subpackage test
 * @author Kevin Gomez <contact@kevingomez.fr>
 * @copyright (c) Carpe Hora SARL 2011
 * @since 2011-04-13
 */

/**
 * Used to test protected methods of the YahooOpenIdConsumer class
 */
class YahooOpenIdConsumerTester extends YahooOpenIdConsumer
{
  protected $valid_params = array(
    'openid_ns' => 'http://specs.openid.net/auth/2.0',
    'openid_mode' => 'id_res',
    'openid_return_to' => 'http://users-dev.my-t-resa.loc/index.php/register/yahoo/verify',
    'openid_claimed_id' => 'https://me.yahoo.com/a/uXjzeWUaxZnPGfJ95Jt58qBgZnIhBn8NPe4lxA--#a4f64',
    'openid_identity' => 'https://me.yahoo.com/a/uXjzeWUaxZnPGfJ95Jt58qBgZnIhBn8NPe4lxA--',
    'openid_realm' => 'http://users-dev.my-t-resa.loc',
    'openid_ns_ax' => 'http://openid.net/srv/ax/1.0',
    'openid_ax_mode' => 'fetch_response',
    'openid_ax_value_email' => 'carpe_hora_test@yahoo.fr',
    'openid_ax_value_fullname' => 'Carpe Hora',
    'openid_ax_value_nickname' => 'Carpe Hora',
    'openid_response_nonce' => '2011-04-13T15:11:51ZI03kPhSsdB24kYfRCDU_1WQiddMeSOcjSA--',
    'openid_signed' => 'assoc_handle,claimed_id,identity,mode,ns,op_endpoint,response_nonce,return_to,signed,ax.value.email,ax.type.email,ax.value.fullname,ax.type.fullname,ax.value.nickname,ax.type.nickname,ns.ax,ax.mode,pape.auth_level.nist',
    'openid_op_endpoint' => 'https://open.login.yahooapis.com/openid/op/auth',
    'openid_ax_type_email' => 'http://axschema.org/contact/email',
    'openid_ax_type_fullname' => 'http://axschema.org/namePerson',
    'openid_ax_type_nickname' => 'http://axschema.org/namePerson/friendly',
    'openid_pape_auth_level_nist' => '0',
    'openid_sig' => '', // to fill
  );


  public function __construct($realm)
  {
    parent::__construct($realm);

    $this->valid_params['openid_assoc_handle'] = $this->publicGethandle();
  }

  public function publicCheckHandle()
  {
    return $this->checkHandle();
  }

  public function prepareValidRequest($params)
  {
    if ($params!==null)
    {
      $this->valid_params = array_merge($this->valid_params, $params);
    }
    $_REQUEST = array_merge($_REQUEST, $this->valid_params);

    $_REQUEST['openid_sig'] = $this->publicComputeSignature($this->valid_params);
  }

  public function getValidParam($key)
  {
    return $this->valid_params[$key];
  }

  public function publicGetHandle()
  {
    return $this->getHandle();
  }

  public function publicComputeSignature(array $params)
  {
    return $this->computeSignature($params);
  }
} // END OF YahooOpenIdConsumerTester
