<?php

// vim: ft=symfony.php.sftest

$app = 'users';

include(dirname(__FILE__).'/../../../../test/bootstrap/functional.php');

$browser = TresaTestFunctional::initialize();

// test data
$valid_data = array(
  'sf_guard_user' => array(
    'username'        => 'tagadou',
    'password'        => 'plouf',
    'password_again'  => 'plouf',
    'mail'            => 'moi@moi.fr',
    'firstname'       => 'My Firstname',
    'lastname'        => 'My Lastname',
  ),
);

$invalid_data = TresaTestFunctional::mergeFormData($valid_data, array(
      'username'        => 'ti',  // too short
      'password_again'  => 'tu',  // invalid (will trigger an error for the password field)
    )
);

$data_taken_username = TresaTestFunctional::mergeFormData($valid_data,
                                                          'username', 'demo');
$data_taken_mail = TresaTestFunctional::mergeFormData($valid_data,
                                                      'mail', 'user2@t-resa.fr');

$form_data = $valid_data['sf_guard_user'];

$birthday = sprintf('%d-%d-%d', $form_data['birthday']['year'], $form_data['birthday']['month'], $form_data['birthday']['day']);


// begin: tests
$browser
  ->info("1. Display the register page")

  ->get('/register')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'register')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValid()
    ->checkForm(new RegistrationForm())
    // insert your tests here
  ->end()

  ->info("> 1.1 Submit an invalid form")
    ->click('Enregistrer', $invalid_data)

    ->with('form')->begin()
      ->hasErrors(3)
      //->debug()
      ->isError('username', 'min_length')
      ->isError('password_again', 'min_length')
      ->isError('password', 'invalid')
    ->end() // end on form block
  // end of block > 1.1 Submit an invalid form

  ->info("> 1.2 Submit a form with an already used username")
    ->click('Enregistrer', $data_taken_username)

    ->with('form')->begin()
      ->hasErrors(1)
      //->debug()
      ->isError('username', 'invalid invalid')
    ->end() // end on form block
  // end of block > 1.2 Submit a form with an already used username

  ->info("> 1.3 Submit a form with an already used mail")
    ->click('Enregistrer', $data_taken_mail)

    ->with('form')->begin()
      ->hasErrors(2)
      //->debug()
      ->isError('mail', 'invalid')
    ->end() // end on form block
  // end of block > 1.3 Submit a form with an already used mail

  ->info("> 1.4 Submit a valid form")
    ->click('Enregistrer', $valid_data)

    ->with('form')->begin()
      ->hasErrors(false)
    ->end() // end on form block

    //check routing is OK
    ->with('request')->begin()
      ->isMethod('post')
      ->isParameter('module', 'chCmsFrontendSignup')
      ->isParameter('action', 'create')
    ->end()
  // end of block > 1.4 Submit a valid form

  ->info("> 1.5 Check if the user is in the database")
    ->info("> 1.5.1 Check the sfGuardUser table")
      ->with('propel')->begin()
      ->check('sfGuardUser', array(
                'username' => $form_data['username']
             ))
      // end of block > 1.5.1 Check the sfGuardUser table

    ->info("> 1.5.2 Check the sfGuardProfile table")
      ->check('sfGuardProfile', array(
          'firstname' => $form_data['firstname'],
          'lastname'  => $form_data['lastname'],
        ))
    ->end() // end on propel block
    // end of block > 1.5.2 Check the sfGuardProfile table
  // end of block > 1.5 Check if the user is in the database

  // end of get /register

// end of block 1. Display the register page
;


$browser
  ->restart()

  ->signin('demo', 'demo')
  ->with('user')->begin()
    ->isAuthenticated(true)
  ->end()

  ->get('/register')

  ->info("2. An already logged in user is redirected to the home page")
    ->with('response')->begin()
      ->isRedirected()
    ->end() // end on response block

    ->followRedirect()

    ->with('request')->begin()
      ->isParameter('module', 'chCmsFrontendAccount')
      ->isParameter('action', 'index')
    ->end() // end on request block
  ->signout()
  // end of block 2. An already logged in user is redirected to the home page


->info('Now test checker')
->info('username checker')
  ->get('/register')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'register')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValid()
    ->checkForm(new RegistrationForm())
  ->end()


  ->get('/searchuser?username=toto')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'userExistSearch')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValidJson()
    ->contains('Nom d\'utilisteur trop court!')
    // insert your tests here
  ->end()
  // end of get /searchuser

  ->get('/searchuser?username=collaborateurDemo')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'userExistSearch')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValidJson()
    //due to encode type
    ->contains('"Ce nom d\'utilisateur est d\u00e9j\u00e0 pris')
    // insert your tests here
  ->end()
  // end of get /searchuser
  ->get('/searchuser?username=tototo')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'userExistSearch')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValidJson()
    ->contains('Disponible')
    // insert your tests here
  ->end()
  // end of get /searchuser
->info('mail checker')
  ->get('/register')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'register')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValid()
    ->checkForm(new RegistrationForm())
  ->end()


  ->get('/searchmail?mail=toto')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'mailExistSearch')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValidJson()
    ->contains('Nom d\'utilisteur trop court!')
    // insert your tests here
  ->end()
  // end of get /searchmail

  ->get('/searchmail?mail=')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'mailExistSearch')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValidJson()
    //due to encode type
    ->contains('"Mail vide!')
    // insert your tests here
  ->end()
  // end of get /searchmail
  ->get('/searchmail?mail=tototo')

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'chCmsFrontendSignup')
    ->isParameter('action', 'mailExistSearch')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isStatusCode(200)
    ->isValidJson()
    ->contains('Disponible')
    // insert your tests here
  ->end()
;
