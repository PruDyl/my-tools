<?php

use_helper('chCmsApplication');

function set_left_menu($module, $action, $layoutOptions =array(), $templateVars = array())
{
  $viewInstance = sfContext::getInstance()->get('view_instance');
  $viewInstance->setComponentSlot('leftmenu', $module, $action);
  $request = sfContext::getInstance()->getRequest();
  $request->setParameter('leftmenu', $templateVars);
  /*
  if (is_array($layoutOptions) && count($layoutOptions))
  {
    $strEvent = 'var _l = YAHOO.widget.LayoutUnit.getLayoutUnitById("left-menu");';
    foreach($layoutOptions as $key => $value)
    {
      $strEvent.= '_l.set('.json_encode($key).', '.json_encode($value).');';
    }
    //ysfYUI::addEvent('document', 'ready', $strEvent);
  }* @package    T-resa-pro
  }* @subpackage default
  }* @author     Julien Muetton <julien_muetton@carpe-hora.com>
  }*/
}

function get_boolean_value($value)
{
  return jui_icon($value  ? 'silk-tick' : 'silk-cross');
}

function include_boolean_value($value)
{
  echo get_boolean_value($value);
}

function get_message($class, $message)
{
  if (!in_array($class, array('tip', 'error', 'info')))
  {
    echo get_message('error', sprintf('Unknown message type %s', $class));
  }

  return content_tag('p', $message, array(
                                  'class' => sprintf('alert %s', $class)));
}

function get_info($message)
{
  return get_message('info', $message);
}

function include_info($message)
{
  echo get_info($message);
}

function get_error($message)
{
  return get_message('error', $message);
}

function include_error($message)
{
  echo get_error($message);
}


function get_tip($message)
{
  return get_message('tip', $message);
}

function include_tip($message)
{
  echo get_tip($message);
}

function  app_date($date)
{
  $sf_user = isset($sf_user) ? $sf_user : sfCOntext::getInstance()->getUser();
  $date_format = $sf_user->getPreference('date_format');
  return format_date($date, $date_format);
}

function vocabulary($key, $number = 1)
{
  static $vocab;
  if (!$vocab)
  {
    $sf_user = isset($sf_user) ? $sf_user : sfContext::getInstance()->getUser();
    $company = $sf_user->getSelectedCompany();
    $vocab = $company->getCompanyVocabulary();
  }
  $m = sprintf('get%s', ucfirst(Tresa::camelize($key)));
  $s = call_user_func(array($vocab, $m));
  return format_number_choice($s, array(), $number);
}

/**
 * get the title for a backend template
 *
 * <code>
 *  <?php echo get_main_pane_title('myTitle'); ?>
 *  <?php echo get_main_pane_title('Edit object %name%', array('%name%' => $obj->getName())); ?>
 *  <?php echo get_main_pane_title('myTitle', array(), 'id=my-backend-title'); ?>
 * </code>
 *
 * @param string $text the text to display as page title
 * @param array $placeholders replacements for i18n purpose
 * @param array|string $html_options the html attributes to add to the row
 * @return string
 */
function get_main_pane_title($text, $placeholders = array(), $html_options = array())
{
	_add_class_attribute('backend-title', $attributes);
  return content_tag(
										'div', 
												content_tag(
														'h1', 
																__($text, $placeholders), array(
																		'class' => 'ui-widget-header')), $attributes);
}

/**
 * prints the title for a backend template
 *
 * <code>
 *  <?php include_main_pane_title('myTitle'); ?>
 *  <?php include_main_pane_title('Edit object %name%', array('%name%' => $obj->getName())); ?>
 *  <?php include_main_pane_title('myTitle', array(), 'id=my-backend-title'); ?>
 * </code>
 *
 * @param string $text the text to display as page title
 * @param array $placeholders replacements for i18n purpose
 * @param array|string $html_options the html attributes to add to the row
 * @return string
 */
function include_main_pane_title($text, $placeholders = array(), $html_options = array())
{
  echo get_main_pane_title($text, $placeholders, $html_options = array());
}

