<?php

//include dirname(__FILE__).'/../bootstrap/functional.php';
$app='pro';
include dirname(__FILE__).'/../../../../test/bootstrap/functional.php';
include dirname(__FILE__).'/../../lib/test/OAuth.php';

//$browser = new sfTestFunctional(new sfBrowser());
$browser = TresaTestFunctional::initialize(/* load to be able to authenticate */ true);

$browser
  ->info('check an oAuth request')
  ->get('/oauth/request_token')

  // check the response
  ->with('response')->begin()
    ->isStatusCode(404)
  ->end();
  // end of get ?oauth_consumer_key=joe&oauth_signature_method=sha1&oauth_timestamp=123&oauth_nonce=acd&oauth_signature=aze

$sig = new OAuthSignatureMethod_HMAC_SHA1();
$affiliate = OAuthAffiliateCredentialQuery::create()->findOneBySlug('joe');
$uri = join('&', array(
          'oauth_consumer_key='.$affiliate->getConsumerKey(),
          'oauth_nonce=a_nonce',
          'oauth_signature_method='.$sig->name(),
          'oauth_timestamp='.time(),
          'oauth_callback='.chCmsOAuthRequestToolkit::urlencode('http://localhost/my/oauth/clients.html'),
        ));
$str = 'GET&'.chCmsOAuthRequestToolkit::urlencode('http://localhost/oauth/request_token').'&'.chCmsOAuthRequestToolkit::urlencode($uri);
$signature = $sig->signature($browser->getRequest(), $str, $affiliate->getSharedSecret(), false);

$browser
  ->info('do an actual request')
  ->get('/oauth/request_token?'.$uri.'&oauth_signature='.$signature)

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'requestToken')
  ->end()

  ->with('response')->begin()
    ->isRedirected()
  ->end() // end on response block

  ->followRedirect()

  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'authorizeToken')
  ->end() // end on request block

  ->isForwardedTo('chCmsFrontendAccount', 'signin')

  // check the response
  ->with('response')->begin()
    ->isStatusCode(401)
    ->isValid()
  ->end()
  // end of get /oauth/request_token?oauth_consumer_key=joe&oauth_signature_method=sha1&oauth_timestamp=123&oauth_nonce=acd&oauth_signature=aze

  ->signin('demo', 'demo', array('follow_redirect' => false ))

  ->with('response')->begin()
    ->isRedirected()
  ->end() // end on response block

  ->followRedirect()

  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'authorizeToken')
  ->end() // end on request block

  ->isForwardedTo('oAuthMyClients', 'allow')

  ->with('response')->begin()
    ->isRedirected()
  ->end() // end on response block

  ->followRedirect()

  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'accessToken')
  ->end() // end on request block

  ->with('response')->begin()
    ->isRedirected()
  ->end() // end on response block

  ->followRedirect()

  // now check redirect is to content
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthMyClients')
    ->isParameter('action', 'index')
  ->end() // end on request block
  ->with('response')

;

$browser
  ->info('now sign out')
  ->signout();

$browser
  ->info('try a new request without existing token');

$sig = new OAuthSignatureMethod_HMAC_SHA1();
$affiliate = OAuthAffiliateCredentialQuery::create()->findOneBySlug('jack');
$uri = join('&', array(
          'oauth_consumer_key='.$affiliate->getConsumerKey(),
          'oauth_nonce=a_nonce',
          'oauth_signature_method='.$sig->name(),
          'oauth_timestamp='.time(),
          'oauth_callback='.chCmsOAuthRequestToolkit::urlencode('http://localhost/my/oauth/clients.html'),
        ));
$str = 'GET&'.chCmsOAuthRequestToolkit::urlencode('http://localhost/oauth/request_token').'&'.chCmsOAuthRequestToolkit::urlencode($uri);
$signature = $sig->signature($browser->getRequest(), $str, $affiliate->getSharedSecret(), false);

$browser
  ->get('/oauth/request_token?'.$uri.'&oauth_signature='.$signature)

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'requestToken')
  ->end()

  ->with('response')->begin()
    ->isRedirected()
  ->end() // end on response block

  ->followRedirect()

  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'authorizeToken')
  ->end() // end on request block

  ->isForwardedTo('chCmsFrontendAccount', 'signin')

  // check the response
  ->with('response')->begin()
    ->isStatusCode(401)
    ->isValid()
  ->end()
  // end of get /oauth/request_token?oauth_consumer_key=joe&oauth_signature_method=sha1&oauth_timestamp=123&oauth_nonce=acd&oauth_signature=aze

  ->signin('demo', 'demo', array('follow_redirect' => false ))

  ->with('response')->begin()
    ->isRedirected()
  ->end() // end on response block

  ->followRedirect()

  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'authorizeToken')
  ->end() // end on request block

  ->isForwardedTo('oAuthMyClients', 'allow')

  ->with('response')->begin()
    ->isStatusCode(200)
/   ->isValid()
    ->checkForm(new OAuthUserTokenForm())
  ->end() // end on response block

  ->click(strtr('Connect to %affiliate%', array('%affiliate%' => $affiliate->getName())))

  //check routing is OK
  ->with('request')->begin()
    ->isMethod('post')
    ->isParameter('module', 'oAuthMyClients')
    ->isParameter('action', 'doAllow')
  ->end()

  // check the response
  ->with('response')->begin()
    ->isRedirected()
  ->end()
  // end of click Connect to %affiliate%

  ->followRedirect()

  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthServer')
    ->isParameter('action', 'accessToken')
  ->end() // end on request block

  ->with('response')->begin()
    ->isRedirected()
  ->end() // end on response block

  ->followRedirect()

  // now check redirect is to content
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthMyClients')
    ->isParameter('action', 'index')
  ->end() // end on request block

  ->info('check with extra parameters')
;

$affiliate = OAuthAffiliateCredentialQuery::create()->findOneBySlug('jack');
$token = $browser->getUser()->getOAuthValidTokenForAffiliate($affiliate->getId());
$oaClient = new OAuthConsumer($affiliate->getConsumerKey(), $affiliate->getSharedSecret());
$oaToken = new OAuthToken($token->getToken(), $token->getSharedSecret());
$sig = new testOAuthSignatureMethod_HMAC_SHA1();
$params = array('extra' => 'extra');
$endpoint = 'http://localhost/my/oauth/clients.html';
$req_req = OAuthRequest::from_consumer_and_token($oaClient, $oaToken, "GET", $endpoint, $params);
$req_req->sign_request($sig, $oaClient, $oaToken);

$browser
  ->get($req_req)

  // now check redirect is to content
  ->with('request')->begin()
    ->isMethod('get')
    ->isParameter('module', 'oAuthMyClients')
    ->isParameter('action', 'index')
    ->isParameter('extra', 'extra')
  ->end() // end on request block
;
// vim: ft=symfony.php.sftest

