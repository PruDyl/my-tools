<?php
/**
 * This file declare the PluginMyAccountProfileForm class.
 *
 * @package chCmsMyAccountPlugin
 * @subpackage forms
 * @author Ludovic Pellé <ludovic_pelle@carpe-hora.com>
 * @copyright (c) Carpe Hora SARL 2011
 * @since 2011-05-16
 */

/**
 *Forms for MyAccount Account Profil
 */
class PluginMyAccountProfileForm extends ContractorForm
{
  /**
   * set up the form
   **/
  public function setup()
  {
    parent::setup();
    $this->useFields(array(
				'company_name'  ,
				'agenda_header' ,
				'public_name'   ,
				'phone'					,
        'mail'          ,
				'mobile'				,
				'address_1'			,
				'address_2'		  ,
				'address_3'			,
				'zip_code'			,
				'town'					,
      ));

    $this->extendWithExtraFields();
    // override validators
    $this->setValidator('mail', new sfValidatorEmail(array(
                              'required'   => true,
                              'max_length' => '255'
                        ),array(
                            'invalid'    => '"%value%" n\'est pas une adresse de courier electronique',
                            'max_length' => 'Vous ne pouvez avoir une adresse mail de plus de %max_length% caractères'
                        )));
    $this->setValidator('phone',  new chCmsValidatorPhone(array(
                            'required' => false
                        ),array(
                            'invalid'=>'"%value%" n\'est pas un numéro de téléphone'
                        )));
    $this->setValidator('mobile',  new chCmsValidatorPhone(array(
                            'required' => false
                        ),array(
                            'invalid'=>'"%value%" n\'est pas un numéro de téléphone'
                        )));

		$this->setWidget('upgrade_town_autocomplete', new chCmsFormWidgetUpgradeZipTown(array(
																																'zipcode' => 'zip_code',
																																'town'		=> 'town')));
		
		$this->validatorSchema->setPostValidator(new chCmsValidatorUpgradeZipTown(array(
                                                                'required' => false,
																																'zipcode' => 'zip_code',
																																'town'		=> 'town',
																																'check_consistancy' => false)));

    $this->widgetSchema->setNameFormat('myaccount_profile[%s]');
  }
  /**
   * undocumented function
   *
   * @return void
   * @author Ludovic Pellé <ludovic_pelle@carpe-hora.com>
   **/
  public function hasrExtraFields()
  {
    return count($this->getExtraFields())>0;
  }

  /**
   * Get Extra field (who are public)
   *
   * @return list of formField
   * @author Ludovic Pellé <ludovic_pelle@carpe-hora.com>
   **/
  public function getExtraFields()
  {
    $this->publicExtraFields = array();
    foreach (parent::getExtraFields() as $field) 
    {
      if ($field->getIsPublic())
      {
        $this->publicExtraFields[] = $field;
      }
    }

    return $this->publicExtraFields;
  }
} // END OF PluginMyAccountProfileForm
