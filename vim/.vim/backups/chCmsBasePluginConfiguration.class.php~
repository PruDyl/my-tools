<?php
require_once(dirname(dirname(__FILE__)).'/lib/chCmsConfiguration.class.php');

/**
 * chCmsPlugin configuration.
 *
 * @package     chCmsBasePlugin
 * @subpackage  config
 * @author      Julien Muetton <julien_muetton@carpe-hora.com>
 * @version     SVN: $Id: PluginConfiguration.class.php 12675 2008-11-06 08:07:42Z Kris.Wallsmith $
 */
class chCmsBasePluginConfiguration extends sfPluginConfiguration
{
  /**
   * @see sfPluginConfiguration
   */
  public function initialize()
  {
    $this->dispatcher->connect('user.method_not_found', array('chCmsBasicUser', 'methodNotFound'));
    $this->dispatcher->connect('user.change_authentication', array('chCmsBasicUser', 'changeAuthentication'));

    // register scripts
    $this->dispatcher->connect('context.load_factories', array('chCmsBasePluginConfiguration', 'loadAppConfiguration'));

    //load the configuration
    $this->dispatcher->connect('command.pre_command', array('chCmsBasePluginConfiguration', 'loadTaskConfiguration'));
    $this->dispatcher->connect('propel.configure',    array('chCmsBasePluginConfiguration', 'loadDbConfiguration'));
  }

  public static function loadTaskConfiguration($event)
  {
    require_once(dirname(dirname(__FILE__)).'/lib/chCmsConfiguration.class.php');
    chCmsConfiguration::loadTaskConfiguration($event->getSubject());
  }

  public static function loadDbConfiguration()
  {
    chCmsConfiguration::loadDbConfiguration();
  }

  /**
   * listen to context.load_factory event.
   *
   * @see chCmsBaseAssets
   *
   * @return void
   **/
  public function listenToLoadFactoriesEvent(sfEvent $event)
  {
    self::loadAppConfiguration($event);
  }

  /**
   * listen to context.load_factory event.
   * * register scripts and css.
   * * load ch_cms configuration
   *
   * @return void
   * @author Julien Muetton <julien_muetton@carpe-hora.com>
   **/
  public static function loadAppConfiguration(sfEvent $event)
  {
    $dispatcher   = $event->getSubject()->getEventDispatcher();
    $response     = $event->getSubject()->getResponse();
    $sf_user      = $event->getSubject()->getUser();
    $configCache  = $event->getSubject()->getConfigCache();

    $dispatcher->notify(new sfEvent($event, 'application.log', array('parse ch_cm.yml configuration', 'priority' => sfLogger::INFO)));
    chCmsConfiguration::loadAppConfiguration($configCache);

    $dispatcher->notify(new sfEvent($event, 'application.log', array('register chCmsBasePlugin assets', 'priority' => sfLogger::INFO)));
    chCmsBaseAssets::registerAssets($response, $sf_user);

    // now create upload url
    $request = $event->getSubject()->getRequest();
    $upload_dirname = basename(sfConfig::get('sf_upload_dir'));
    sfConfig::add(array(
        'sf_upload_dir_name' => $upload_dirname,
        'sf_upload_dir_url'  => $request->getUriPrefix().$upload_dirname));
  }
}
